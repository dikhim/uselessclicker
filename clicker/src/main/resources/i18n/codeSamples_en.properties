# suppress inspection "UnusedProperty" for whole file
btnCombinedAbsolutePath=Activate mouse movement events recording in absolute coordinates\n\
  \n\
  A#$ - mouse.moveTo(#,$)
btnCombinedDelays=Activate delays between events recording\n\
  \n\
  D# - system.sleep(#)\n\
  S# - system.sleep(#*1000)
btnCombinedDetectStopPoints=Enable the option to \u0432\u0443\u0435\u0443\u0441\u0435 stop points with the specified stopTime delay\n\
\u00A0\u00A0\n\
\u00A0\u00A0If this option is enabled, the result is guaranteed to get all mouse movement events where the cursor remained at one place more than the specified amount of time\n\
\u00A0\u00A0\n\
\u00A0\u00A0This option helps to fix the recording problems with the fixedRate and minDistance options and guarantees that the important event will not be omitted\n\

btnCombinedFixRate=Enable the fixed rate recording option \n\
  \n\
  If this option is enabled, the mouse motion events will be "sifted" so that their number per second does not exceed the fixedRate value\n\
  \u00A0\u00A0\n\
  This option will help reduce the amount of code by reducing the "quality" of the path\n\

btnCombinedKeys=Activate keyboard events recording\n\
  \n\
  k# - key.press(#)\n\
  K# - key.release(#)
btnCombinedMinDistance=Enable the option with a minimum distance restriction\n\
  \n\
  If this option is enabled, the mouse movement event won't be included in the result if the distance to the previous event is less than the specified minDistance value\n\
  \n\
  This option helps to reduce the amount of code in case you need to accurately and slowly draw a certain contour
btnCombinedMouseButtons=Activate mouse button events recording\n\
  \n\
  l - mouse.press('LEFT')\n\
  L - mouse.release('LEFT')\n\
  r - mouse.press('RIGHT')\n\
  R - mouse.release('RIGHT')\n\
  m - mouse.press('MIDDLE')\n\
  M - mouse.release('MIDDLE')
btnCombinedMouseWheel=Activate mouse wheel events recording\n\
  \n\
  w# - mouse.wheel('DOWN',#)\n\
  W# - mouse.wheel('UP',#)
btnCombinedRelativePath=Activate mouse movement events recording in relative coordinates\n\
  \n\
  X#$ - mouse.move(#,$)
btnInsertCombinedLog=Activates keyboard and mouse events recording\n\
  \n\
  Recorded events encode into string representation\n\
  \n\
  Recording begins after releasing a control key and stops after pressing one\n\
  Thus, the events of the control key aren't recorded\n\
  You can also use a combination of keys, but you have to take into account that in this case events of the control key will be recorded\n\
  \n\
  The result is guaranteed to include all events of the keyboard, buttons and mouse wheel\n\
  Also, the result is always included mouse movement events preceding and following these events\n\
  The remaining mouse movement events can be filtered by additional options\n\
\n\
Example:\n\
  combined.run('unicode','A##D#A##D#A##D#');
btnInsertKeyCode=Inserts a code for press and release key events\n\
  \n\
Example:\n\
  key.press('CONTROL');\n\
  key.press('\u0421');\n\
  key.release('\u0421');\n\
  key.release('CONTROL');\n\
will be inserted after pressing corresponding keys "CONTROL C"
btnInsertKeyCodeWithDelay=Inserts a code for events of pressing and releasing keys with delays between events\n\
  \n\
Example:\n\
  system.sleep(200);\n\
  key.press('CONTROL');\n\
  system.sleep(100);\n\
  key.press('\u0421');\n\
  system.sleep(100);\n\
  key.release('\u0421');\n\
  system.sleep(200);\n\
  key.release('CONTROL');\n\
will be inserted after pressing corresponding keys "CONTROL C"
btnInsertKeyName=Inserts key names\n\
  \n\
Example:\n\
  CONTROL ALT DELETE\n\
will be inserted after pressing corresponding keys
btnInsertMouseClick=Inserts a code of click\n\
  \n\
Example:\n\
  mouse.click('LEFT');\n\
  mouse.click('RIGHT');\n\
will be inserted after clicking corresponding buttons
btnInsertMouseClickAt=Inserts a code of click at a particular point\n\
  \n\
Example:\n\
  mouse.clickAt('LEFT',500,500);\n\
  mouse.clickAt('RIGHT',600,600);\n\
will be inserted after clicking buttons
btnInsertMouseCode=Inserts a code of pressed and released mouse buttons\n\
  \n\
Example:\n\
  mouse.pressAt('LEFT',100,0);\n\
  mouse.releaseAt('LEFT',200,0);\n\
will be inserted after pressing and releasing corresponding button
btnInsertMouseCodeWithDelay=Inserts a code of pressed and released mouse buttons with delays between events\n\
  \n\
Example:\n\
  system.sleep(200);\n\
  mouse.pressAt('LEFT',100,0);\n\
  system.sleep(200);\n\
  mouse.releaseAt('LEFT',200,0);\n\
  system.sleep(500);\n\
will be inserted after pressing and releasing corresponding button
btnInsertMouseMove=Inserts a code of relative mouse movement\n\
  \n\
Example:\n\
  mouse.move(100,-50);\n\
wil be inserted after moving mouse
btnInsertMouseMoveTo=Inserts a code of mouse movement at particular point\n\
  \n\
Example:\n\
  mouse.moveTo(200,200);\n\
will be inserted after moving cursor at the particular point
btnInsertMouseName=Inserts pressed button names\n\
  \n\
Example:\n\
  LEFT MIDDLE RIGHT\n\
will be inserted after pressing corresponding buttons
btnInsertMousePress=Inserts a code of pressed mouse buttons\n\
  \n\
Example:\n\
  mouse.press('LEFT');\n\
  mouse.press('RIGHT');\n\
will be inserted after pressing corresponding buttons
btnInsertMousePressAt=Inserts a code of pressed mouse buttons at the particular point\n\
  \n\
Example:\n\
  mouse.pressAt('LEFT',400,400);\n\
will be inserted after pressing corresponding button at the particular point
btnInsertMouseRelativeCode=Inserts a code of pressed and releases buttons relative to the last one\n\
  \n\
Example:\n\
  mouse.moveAndPress('LEFT',50,0);\n\
  mouse.moveAndRelease('LEFT',0,0);\n\
will be inserted when the cursor is moved to the right by 50 pixels, pressing and releasing the left mouse button at the same point
btnInsertMouseRelease=Inserts a code of released mouse buttons\n\
  \n\
Example:\n\
  mouse.release('LEFT');\n\
will be inserted after releasing corresponding buttons
btnInsertMouseReleaseAt=Inserts a code of released mouse buttons at the particular point\n\
  \n\
Example:\n\
  mouse.releaseAt('LEFT',400,400);\n\
will be inserted after releasing corresponding button at the particular point
btnInsertMouseWheel=Inserts a code of pressed and released mouse buttons with click detection\n\
  \n\
Example:\n\
  mouse.clickAt('LEFT',200,200);\n\
will be inserted after clicking corresponding mouse button
btnInsertSelectArea=Insert selected area\
\
Press controll button to record first point and release it record the second one
btnInsertSelectImage=Insert a selected area to the image output view\n\
  \n\
  Choose any two points that represent rectangular you want to capture\n\
  \n\
  Press control button to record the first point and release it to specify the second one\n\
  \n\
  The result will be loaded to the image out area
clipboard.get.code=clipboard.get();
clipboard.get.hint=clipboard.get();\n\
  \n\
Get clipboard text content
clipboard.set.code=clipboard.set('TEXT');
clipboard.set.hint=clipboard.set('TEXT');\n\
  \n\
Copy the text to the clipboard
combinedEncodingType=Encoding for the result string\n\
  \n\
  unicode - encode result string using unicode characters\n\
  base64 - encode result string using base64 characters\n\
  base64-zip - encode result string using base64 characters and compress\n\
  \n\
  Using unicode characters a string takes less space but can be easily corrupted\n\
  Using base64-zip encoding a string takes less space, but cannot be edited afterwards  \n\

create.image.code=create.image(16,16);
create.image.hint=create.image(16,16);\n\
  \n\
Create an image object\n\
  \n\
Usages:\n\
  image(int width, int height)\n\
  image(String base64String)
create.imageFile.code=create.imageFile('file.png');
create.imageFile.hint=create.imageFile('file.png');\n\
  \n\
Create an image from the file path
create.point.code=create.point(0,0);
create.point.hint=create.point(0,0);\n\
  \n\
Create a point object\n\
  \n\
Usages:\n\
  point(int x, int y)
create.rectangle.code=create.rectangle(0,0,1,1);
create.rectangle.hint=create.rectangle(0,0,1,1);\n\
  \n\
Create a rectangle object\n\
  \n\
Usages:\n\
  rectangle(int x1, int y1,\n\
    int width, int height)\n\
  rectangle(Point p,\n\
    int width, int height)\n\
  rectangle(Point p1, Point p2)
key.getMinDelay.code=key.getMinDelay();
key.getMinDelay.hint=key.getMinDelay();\n\
  \n\
Get the minimum delay. The minimum delay represents a threshold for an each delay in the object
key.getMultipliedPressDelay.code=key.getMultipliedPressDelay();
key.getMultipliedPressDelay.hint=key.getMultipliedPressDelay();\n\
  \n\
Get a real value for the press key delay multiplied by multiplier
key.getMultipliedReleaseDelay.code=key.getMultipliedReleaseDelay();
key.getMultipliedReleaseDelay.hint=key.getMultipliedReleaseDelay();\n\
  \n\
Get a real value for the release key delay multiplied by multiplier
key.getMultiplier.code=key.getMultiplier();
key.getMultiplier.hint=key.getMultiplier();\n\
  \n\
Get the delay multiplier\n\
  \n\
At this number, all delays for the object are multiplied\n\
\u00A0\u00A0\n\
The reciprocal of the speed multiplier\n\
  \n\
key.getMultiplier():float
key.getPressDelay.code=key.getPressDelay();
key.getPressDelay.hint=key.getPressDelay();\n\
  \n\
Get the key press delay in ms. (pressDelay)\n\
  \n\
key.getPressDelay():int
key.getReleaseDelay.code=key.getReleaseDelay();
key.getReleaseDelay.hint=key.getReleaseDelay();\n\
  \n\
Get the mouse button release delay in ms. (releaseDelay)\n\
  \n\
key.getReleaseDelay():int
key.getSpeed.code=key.getSpeed();
key.getSpeed.hint=key.getSpeed();\n\
  \n\
Get the speed multiplier\n\
\u00A0\u00A0\n\
The reciprocal of the delay multiplier\n\
  \n\
key.getSpeed():float
key.isCapsLocked.code=key.isCapsLocked();
key.isCapsLocked.hint=key.isCapsLocked();\n\
  \n\
Check if CAPS.LOCK is locked
key.isNumLocked.code=key.isNumLocked();
key.isNumLocked.hint=key.isNumLocked();\n\
  \n\
Check if NUM.LOCK is locked
key.isPressed.code=key.isPressed('CONTROL');
key.isPressed.hint=key.isPressed('CONTROL');\n\
  \n\
Check if the specified keys are pressed\n\
  \n\
key.isPressed('KEY1 KEY2'):boolean\n\
  KEY1, KEY2 - key's names
key.isScrollLocked.code=key.isScrollLocked();
key.isScrollLocked.hint=key.isScrollLocked();\n\
  \n\
Check if SCROLL.LOCK is locked
key.perform.code=key.perform('CONTROL','PRESS');
key.perform.hint=key.perform('CONTROL','PRESS');\n\
  \n\
Perform an action for the key
key.press.code=key.press('CONTROL');
key.press.hint=key.press('CONTROL');\n\
  \n\
Press the specified key\n\
  \n\
key.press('KEY');\n\
  KEY - key's name\n\
  \n\
Method consists of:\n\
  press('KEY');\n\
    sleep(pressDelay);
key.release.code=key.release('CONTROL');
key.release.hint=key.release('CONTROL');\n\
  \n\
Release the specified key\n\
  \n\
key.release('KEY');\n\
  KEY - key's name\n\
  \n\
The method consists of:\n\
  release('KEY');\n\
    sleep(releaseDelay);
key.resetDelays.code=key.resetDelays();
key.resetDelays.hint=key.resetDelays();\n\
  \n\
Reset all delays to default values
key.resetMultiplier.code=key.resetMultiplier();
key.resetMultiplier.hint=key.resetMultiplier();\n\
  \n\
Reset the delay multiplier to a default value
key.resetSpeed.code=key.resetSpeed();
key.resetSpeed.hint=key.resetSpeed();\n\
  \n\
Reset the speed multiplier to a default value
key.setDelays.code=key.setDelays(10);
key.setDelays.hint=key.setDelays(10);\n\
  \n\
Set all delays to the specified value\n\
  \n\
key.setDelays(int delay)
key.setMinDelay.code=key.setMinDelay(10);
key.setMinDelay.hint=key.setMinDelay(10);\n\
  \n\
Set a value for the minimum delay
key.setMultiplier.code=key.setMultiplier(1);
key.setMultiplier.hint=key.setMultiplier(1);\n\
  \n\
Set the delay multiplier to the specified value\n\
  \n\
The reciprocal of the speed multiplier\n\
  \n\
key.setMultiplier(float multiplier)
key.setPressDelay.code=key.setPressDelay(10);
key.setPressDelay.hint=key.setPressDelay(10);\n\
  \n\
Set the press delay to the specified value\n\
  \n\
key.setPressDelay(pressDelay)\n\
  int pressDelay - delay
key.setReleaseDelay.code=key.setReleaseDelay(10);
key.setReleaseDelay.hint=key.setReleaseDelay(10);\n\
  \n\
Set the release delay to the specified value\n\
  \n\
key.setReleaseDelay(releaseDelay)\n\
  releaseDelay - delay
key.setSpeed.code=key.setSpeed(1);
key.setSpeed.hint=key.setSpeed(1);\n\
  \n\
Set the speed multiplier\n\
  \n\
The reciprocal of the delay multiplier
key.type.code=key.type('CONTROL');
key.type.hint=key.type('CONTROL');\n\
  \n\
Sequentially press and release each specified key\n\
  \n\
key.type('KEY1 KEY2');\n\
  KEY1, KEY2 - key's names\n\
  \n\
Method consists of(fo each key):\n\
  press('KEY');\n\
    sleep(pressDelay);\n\
  release('KEY');\n\
    sleep(releaseDelay);
key.typeText.code=key.typeText('us','Hello!');
key.typeText.hint=key.typeText('us','Hello!');\n\
  \n\
Types text in a specified layout\n\
\n\
Layout names can be found in the documentation\n\
\n\
Correctly types text only in the case of unpressed modifiers keys(CAPS.LOCK, SHIFT, etc.)\n\
Does not change the state of modifier keys. Be attentive and check them yourself before calling the method\n\
\n\
Use the method in case you need exactly typing text from the keyboard. In other cases, it is better to use the clipboard
language.class.code=function Class (path) {\n\
    this.path = path;\n\
    this.echo = function(text){\n\
        return text;\n\
    };\n\
}
language.class.hint=function Class (path) {\n\
    this.path = path;\n\
    this.echo = function(text){\n\
        return text;\n\
    };\n\
}\n\
  \n\
The template for the class with the name 'Class'\n\
  \n\
To create an object use the code:\n\
  var obj = new Class('MyClass');\n\
  \n\
To get the field from object:\n\
  var out = obj.path;\n\
  \n\
To call a method from object:\n\
  var out = obj.echo('someText');
language.class.name=class
language.functionEcho.code=function echo(text){\n\
    return text;\n\
}
language.functionEcho.hint=function echo(text){\n\
    return text;\n\
}\n\
  \n\
The template of a function with a returning value
language.functionEcho.name=function 'echo'
language.functionVoid.code=function foo(){\n\
    \n\
}
language.functionVoid.hint=function foo(){\n\
    \n\
}\n\
  \n\
The template for an empty function
language.functionVoid.name=function 'void'
language.loopForMinus.code=for(i=10;i>0;i--){\n\
    \n\
}
language.loopForMinus.hint=for(i=10;i>0;i--){\n\
    \n\
}\n\
  \n\
The template for a decreasing loop 'for'
language.loopForMinus.name=loop 'for' i--
language.loopForPlus.code=for(i=0;i<10;i++){\n\
    \n\
}
language.loopForPlus.hint=for(i=0;i<10;i++){\n\
    \n\
}\n\
  \n\
The template for an increasing loop 'for'
language.loopForPlus.name=loop 'for' i++
language.loopWhile.code=while(true){\n\
    \n\
}
language.loopWhile.hint=while(true){\n\
    \n\
}\n\
  \n\
The template for a loop 'while'
language.loopWhile.name=loop 'while'
mouse.button.code=mouse.button('LEFT','PRESS');
mouse.button.hint=mouse.button('LEFT','PRESS');\n\
  \n\
Perform an action for a mouse button
mouse.buttonAt.code=mouse.buttonAt('LEFT','PRESS',0,0);
mouse.buttonAt.hint=mouse.buttonAt('LEFT','PRESS',0,0);\n\
\n\
Perform an action for a mouse button at a particular point
mouse.click.code=mouse.click('LEFT');
mouse.click.hint=mouse.click('LEFT');\n\
  \n\
A mouse button click\n\
  \n\
mouse.click('BTN');\n\
   BTN - button's name\n\
  \n\
The method consists of two calls of pressing and releasing a button:\n\
  press('BTN');\n\
    sleep(pressDelay);\n\
  release('BTN');\n\
    sleep(releaseDelay);
mouse.clickAt.code=mouse.clickAt('LEFT',0,0);
mouse.clickAt.hint=mouse.clickAt('LEFT',0,0);\n\
  \n\
The click the button at the particular point \n\
  \n\
mouse.clickAt('BTN',x,y);\n\
  BTN - button's name\n\
  x,y - coordinates\n\
  \n\
The method consists of two calls of pressing and releasing a button:\n\
  pressAt('BTN',x,y);\n\
    sleep(pressDelay);\n\
  releaseAt('BTN',x,y);\n\
    sleep(releaseDelay);
mouse.getMinDelay.code=mouse.getMinDelay();
mouse.getMinDelay.hint=mouse.getMinDelay();\n\
  \n\
Get the minimum delay. The minimum delay represents a threshold for an each delay in \u0435\u0440\u0443 object
mouse.getMoveDelay.code=mouse.getMoveDelay();
mouse.getMoveDelay.hint=mouse.getMoveDelay();\n\
  \n\
Get the mouse movement delay in ms. (moveDelay)\n\
  \n\
  mouse.getMoveDelay():int
mouse.getMultipliedMoveDelay.code=mouse.getMultipliedMoveDelay();
mouse.getMultipliedMoveDelay.hint=mouse.getMultipliedMoveDelay();\n\
  \n\
Get a real value for the movement delay multiplied by multiplier
mouse.getMultipliedPressDelay.code=mouse.getMultipliedPressDelay();
mouse.getMultipliedPressDelay.hint=mouse.getMultipliedPressDelay();\n\
  \n\
Get a real value for the button pressing delay multiplied by multiplier
mouse.getMultipliedReleaseDelay.code=mouse.getMultipliedReleaseDelay();
mouse.getMultipliedReleaseDelay.hint=mouse.getMultipliedReleaseDelay();\n\
  \n\
Get a real value for the button releasing delay multiplied by multiplier
mouse.getMultipliedWheelDelay.code=mouse.getMultipliedWheelDelay();
mouse.getMultipliedWheelDelay.hint=mouse.getMultipliedWheelDelay();\n\
  \n\
Get a real value for the scroll wheel delay multiplied by multiplier
mouse.getMultiplier.code=mouse.getMultiplier();
mouse.getMultiplier.hint=mouse.getMultiplier();\n\
  \n\
Get the delay multiplier\n\
  \n\
At this number, all delays for the object are multiplied\n\
\u00A0\u00A0\n\
The reciprocal of the speed multiplier\n\
  \n\
  mouse.getMultiplier():float
mouse.getPressDelay.code=mouse.getPressDelay();
mouse.getPressDelay.hint=mouse.getPressDelay();\n\
  \n\
Get the mouse button press delay in ms. (pressDelay)\n\
  \n\
  mouse.getPressDelay():int
mouse.getReleaseDelay.code=mouse.getReleaseDelay();
mouse.getReleaseDelay.hint=mouse.getReleaseDelay();\n\
  \n\
Get the mouse button release delay in ms. (releaseDelay)\n\
  \n\
  mouse.getReleaseDelay():int
mouse.getSpeed.code=mouse.getSpeed();
mouse.getSpeed.hint=mouse.getSpeed();\
  \
Get the speed multiplier\
\u00A0\u00A0\
The reciprocal of the delay multiplier\
  \
  mouse.getSpeed():float
mouse.getWheelDelay.code=mouse.getWheelDelay();
mouse.getWheelDelay.hint=mouse.getWheelDelay();\n\
  \n\
Get the mouse wheel delay in ms. (wheelDelay)\n\
  \n\
  mouse.getWheelDelay():int
mouse.getX.code=mouse.getX();
mouse.getX.hint=mouse.getX();\n\
  \n\
Get the 'x' coordinate of the last mouse event\n\
  \n\
  mouse.getX():int
mouse.getY.code=mouse.getY();
mouse.getY.hint=mouse.getY();\n\
  \n\
Get the 'x' coordinate of the last mouse event\n\
  \n\
  mouse.getY():int
mouse.move.code=mouse.move(0,0);
mouse.move.hint=mouse.move(0,0);\n\
  \n\
Move the cursor relative to the coordinates of the last event\n\
  \n\
  mouse.move(dx,dy);\n\
    dx, dy - offsets\n\
  \n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);
mouse.moveAndButton.code=mouse.moveAndButton('LEFT','PRESS',0,0);
mouse.moveAndButton.hint=mouse.moveAndButton('LEFT','PRESS',0,0);\n\
  \n\
Move the cursor relative to the coordinates of the last event and perform a mouse button action
mouse.moveAndClick.code=mouse.moveAndClick('LEFT',0,0);
mouse.moveAndClick.hint=mouse.moveAndClick('LEFT',0,0);\n\
  \n\
Move the cursor relative to the coordinates of the last event and click the button\n\
  \n\
mouse.moveAndClick('BTN',dx,dy);\n\
  BTN - button's name\n\
  dx, dy - offsets\n\
  \n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  press('BTN');\n\
    sleep(pressDelay);\n\
  release('BTN');\n\
    sleep(releaseDelay);
mouse.moveAndPress.code=mouse.moveAndPress('LEFT',0,0);
mouse.moveAndPress.hint=mouse.moveAndPress('LEFT',0,0);\n\
  \n\
Move the cursor relative to the coordinates of the last event and press the button\n\
  \n\
mouse.moveAndPress('BTN',dx,dy);\n\
  BTN - button's name\n\
  dx, dy - offsets\n\
  \n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  press('BTN');\n\
    sleep(pressDelay);
mouse.moveAndRelease.code=mouse.moveAndRelease('LEFT',0,0);
mouse.moveAndRelease.hint=mouse.moveAndRelease('LEFT',0,0);\n\
  \n\
Move the cursor relative to the coordinates of the last event and release the button\n\
  \n\
mouse.moveAndPress('BTN',dx,dy);\n\
  BTN - button's name\n\
  dx, dy - offsets\n\
  \n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  release('BTN');\n\
    sleep(releaseDelay);
mouse.moveAndWheel.code=mouse.moveAndWheel('DOWN',3,0,0);
mouse.moveAndWheel.hint=mouse.moveAndWheel('DOWN',3,0,0);\n\
  \n\
Move the cursor relative to the coordinates of the last event and rotate the wheel\n\
  \n\
mouse.moveAndWheel\n\
  (direction, amount, dx, dy);\n\
  direction - UP/DOWN\n\
  amount - an amount of lines\n\
  dx, dy - offsets\n\
  \n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  wheel(direction,amount);\n\
    sleep(wheelDelay);
mouse.moveTo.code=mouse.moveTo(0,0);
mouse.moveTo.hint=mouse.moveTo(0,0);\n\
  \n\
Move the cursor to the particular point\n\
  \n\
mouse.moveTo(x,y);\n\
  x, y - coordinates\n\
  \n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);
mouse.pressLeft.code=mouse.pressLeft();
mouse.pressLeft.hint=mouse.pressLeft();\n\
\n\
Press the left mouse button\n\
\n\
Method consists of:\n\
  pressLeft();\n\
    sleep(pressDelay);
mouse.pressAt.code=mouse.pressAt('LEFT',0,0);
mouse.pressAt.hint=mouse.pressAt('LEFT',0,0);\n\
  \n\
Move the cursor to the particular point and press the button\n\
  \n\
mouse.pressAt('BTN',x,y);\n\
  BTN - button's name\n\
  x, y - coordinates\n\
  \n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  press('BTN');\n\
    sleep(pressDelay);
mouse.releaseAt.code=mouse.releaseAt('LEFT',0,0);
mouse.releaseAt.hint=mouse.releaseAt('LEFT',0,0);\n\
  \n\
Move the cursor to the particular point and release the button\n\
  \n\
mouse.releaseAt('BTN',x,y);\n\
  BTN - button's name\n\
  x, y - coordinates\n\
  \n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  release('BTN');\n\
    sleep(releaseDelay);
mouse.resetDelays.code=mouse.resetDelays();
mouse.resetDelays.hint=mouse.resetDelays();\n\
  \n\
Reset all delays to default values
mouse.resetMultiplier.code=mouse.resetMultiplier();
mouse.resetMultiplier.hint=mouse.resetMultiplier();\n\
  \n\
Reset the delay multiplier to a default value
mouse.resetSpeed.code=mouse.resetSpeed();
mouse.resetSpeed.hint=mouse.resetSpeed();\n\
  \n\
Reset the speed multiplier to a default value
mouse.setDelays.code=mouse.setDelays(10);
mouse.setDelays.hint=mouse.setDelays(10);\n\
  \n\
Set all delays to the specified value\n\
  \n\
mouse.setDelays(int delay)
mouse.setMinDelay.code=mouse.setMinDelay(5);
mouse.setMinDelay.hint=mouse.setMinDelay(5);\n\
  \n\
Set a value for the minimum delay
mouse.setMoveDelay.code=mouse.setMoveDelay(10);
mouse.setMoveDelay.hint=mouse.setMoveDelay(10);\n\
  \n\
Set the mouse movement delay to the specified value\n\
  \n\
mouse.setMoveDelay(int moveDelay)\n\
  moveDelay - delay
mouse.setMultiplier.code=mouse.setMultiplier(1);
mouse.setMultiplier.hint=mouse.setMultiplier(1);\n\
  \n\
Set the delay multiplier to the specified value\n\
  \n\
The reciprocal of the speed multiplier\n\
  \n\
mouse.setMultiplier(float multiplier)
mouse.setPressDelay.code=mouse.setPressDelay(10);
mouse.setPressDelay.hint=mouse.setPressDelay(10);\n\
  \n\
Set the press delay to the specified value\n\
  \n\
mouse.setPressDelay(pressDelay)\n\
  int pressDelay - delay
mouse.setReleaseDelay.code=mouse.setReleaseDelay(10);
mouse.setReleaseDelay.hint=mouse.setReleaseDelay(10);\n\
  \n\
Set the release delay to the specified value\n\
  \n\
mouse.setReleaseDelay(releaseDelay)\n\
  int releaseDelay - delay
mouse.setSpeed.code=mouse.setSpeed(1);
mouse.setSpeed.hint=mouse.setSpeed(1);\n\
  \n\
Set the speed multiplier\n\
  \n\
The reciprocal of the delay multiplier
mouse.setWheelDelay.code=mouse.setWheelDelay(10);
mouse.setWheelDelay.hint=mouse.setWheelDelay(10);\n\
  \n\
Set the wheel delay to the specified value\n\
  \n\
mouse.setWheelDelay(wheelDelay)\n\
  int wheelDelay - delay
mouse.setX.code=mouse.setX(0);
mouse.setX.hint=mouse.setX(0);\n\
  \n\
Move the cursor along the 'x' axis to the specified coordinate\n\
  \n\
mouse.setX(x);\n\
  int x - coordinate\n\
  \n\
Method consists of:\n\
  moveTo(x,getY());\n\
    sleep(moveDelay);\n\

mouse.setY.code=mouse.setY(0);
mouse.setY.hint=mouse.setY(0);\n\
  \n\
Move the cursor along the 'y' axis to the specified coordinate\n\
  \n\
mouse.setY(y);\n\
  int y - coordinate\n\
  \n\
Method consists of:\n\
  moveTo(x,getY());\n\
    sleep(moveDelay);
mouse.wheel.code=mouse.wheel('DOWN',3);
mouse.wheel.hint=mouse.wheel('DOWN',3);\n\
\n\
Rotate the mouse wheel on the specifies number of lines\n\
\n\
mouse.wheel(direction, amount);\n\
  direction - UP/DOWN\n\
  int amount - the number of lines\n\
\n\
Method consists of:\n\
  wheel(direction, amount);\n\
    sleep(wheelDelay);
mouse.wheelAt.code=mouse.wheelAt('DOWN',3,0,0);
mouse.wheelAt.hint=mouse.wheelAt('DOWN',3,0,0);\n\
  \n\
Rotate the mouse wheel on the specifies number of lines at the particular point\n\
  \n\
mouse.wheelAt\n\
  (direction, amount, x, y);\n\
  \n\
  direction - UP/DOWN\n\
  int amount - a number of lines\n\
  int x, y - coordinates\n\
  \n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  wheel(direction,amount);\n\
    sleep(wheelDelay);
recFilePath=Insert an absolute file path
screen.getFilledImage.code=screen.getFilledImage(0,0,0,0);
screen.getFilledImage.hint=screen.getFilledImage(0,0,0,0);\n\
  \n\
Get an image for the selected area\n\
  \n\
If the area is beyond the edges of the screen, the blank area will be filled with the black color\n\
  \n\
Usages:\n\
  getFilledImage(int x0, int y0, int x1, int y1)\n\
  getFilledImage(Point p1, Point p2)
screen.getHeight.code=screen.getHeight();
screen.getHeight.hint=screen.getHeight();\n\
  \n\
Get the screen height
screen.getImage.code=screen.getImage(0,0,0,0);
screen.getImage.hint=screen.getImage(0,0,0,0);\n\
  \n\
Get an image for the selected area\n\
  \n\
If the area is beyond the edges of the screen, the image will be cropped\n\
  \n\
Usages:\n\
  getImage(int x0, int y0, int x1, int y1)\n\
  getImage(Point p1, Point p2)\n\
  getImage(Rectangle rectangle)
screen.getWidth.code=screen.getWidth();
screen.getWidth.hint=screen.getWidth();\n\
  \n\
Get the screen width
system.exit.code=system.exit();
system.exit.hint=system.exit();\n\
  \n\
Close the application
system.getMultipliedDelay.code=system.getMultipliedDelay(delay);
system.getMultipliedDelay.hint=system.getMultipliedDelay(delay);\n\
  \n\
Get the multiplied delay
system.getMultiplier.code=system.getMultiplier();
system.getMultiplier.hint=system.getMultiplier();\n\
  \n\
Get the delay multiplier\n\
  \n\
At this number, all delays for the object are multiplied\n\
\u00A0\u00A0\n\
The reciprocal of the speed multiplier
system.getSpeed.code=system.getSpeed();
system.getSpeed.hint=system.getSpeed();\n\
  \n\
Get the speed multiplier\n\
\u00A0\u00A0\n\
The reciprocal of the delay multiplier
system.keyIgnore.code=system.keyIgnore();
system.keyIgnore.hint=system.keyIgnore();\n\
  \n\
Ignore keyboard events for method calls\n\
  \n\
While this option is on, it wil be impossible to call methods by keyboard events
system.keyResume.code=system.keyResume();
system.keyResume.hint=system.keyResume();\n\
  \n\
Resume keyboard events capturing. Cancels the keyIgnore() call\n\

system.mouseIgnore.code=system.mouseIgnore();
system.mouseIgnore.hint=system.mouseIgnore();\n\
  \n\
Ignore mouse events for method calls\n\
  \n\
While this option is on, it wil be impossible to call methods by mouse events
system.mouseResume.code=system.mouseResume();
system.mouseResume.hint=system.mouseResume();\n\
  \n\
Resume mouse events capturing. Cancels the mouseIgnore() call
system.onKeyPress.code=system.onKeyPress('foo','CONTROL');
system.onKeyPress.hint=system.onKeyPress('foo','CONTROL');\n\
  \n\
Register a method call by pressing the specified key
system.onKeyRelease.code=system.onKeyRelease('foo','CONTROL');
system.onKeyRelease.hint=system.onKeyRelease('foo','CONTROL');\n\
  \n\
Register a method call by releasing the specified key
system.onMouseMove.code=system.onMouseMove('foo');
system.onMouseMove.hint=system.onMouseMove('foo');\n\
  \n\
Register a method call by mouse moving
system.onMousePress.code=system.onMousePress('foo','LEFT');
system.onMousePress.hint=system.onMousePress('foo','LEFT');\n\
  \n\
Register a method call by pressing the specified button
system.onMouseRelease.code=system.onMouseRelease('foo','LEFT');
system.onMouseRelease.hint=system.onMouseRelease('foo','LEFT');\n\
  \n\
Register a method call by releasing the specified button
system.onShortcutPress.code=system.onShortcutPress('foo','CONTROL 1');
system.onShortcutPress.hint=system.onShortcutPress('foo','CONTROL 1');\n\
  \n\
Register a method call by pressing the specified keyboard shortcut
system.onShortcutRelease.code=system.onShortcutRelease('foo','CONTROL 1');
system.onShortcutRelease.hint=system.onShortcutRelease('foo','CONTROL 1');\n\
  \n\
Register a method call by releasing the specified keyboard shortcut
system.onWheelDown.code=system.onWheelDown('foo');
system.onWheelDown.hint=system.onWheelDown('foo');\n\
  \n\
Register a method call by scrolling down the wheel
system.onWheelUp.code=system.onWheelUp('foo');
system.onWheelUp.hint=system.onWheelUp('foo');\n\
  \n\
Register a method call by scrolling up the wheel
system.print.code=system.print('');
system.print.hint=system.print('');\n\
  \n\
Print the message
system.println.code=system.println('');
system.println.hint=system.println('');\
  \
Print text and terminate the line
system.resetMultiplier.code=system.resetMultiplier();
system.resetMultiplier.hint=system.resetMultiplier();\n\
  \n\
  Reset the delay multiplier to a default value
system.resetSpeed.code=system.resetSpeed();
system.resetSpeed.hint=system.resetSpeed();\n\
  \n\
Reset the speed multiplier to a default value
system.setMaxThreads.code=system.setMaxThreads('foo',1);
system.setMaxThreads.hint=system.setMaxThreads('foo',1);\n\
  \n\
Set the maximum number of threads to call the method\n\
\u00A0\u00A0\n\
This parameter limits the maximum number of method calls for the keyboard and mouse events\n\
\u00A0\u00A0\n\
If the given method is executed the specified number of times, then the following calls will be ignored\n\
\u00A0\u00A0\n\
This parameter does not affect the call of the method by other ways, but only calls registered on the events of the keyboard and mouse
system.setMultiplier.code=system.setMultiplier(1);
system.setMultiplier.hint=system.setMultiplier(1);\n\
  \n\
Set the delay multiplier to the specified value\n\
  \n\
The reciprocal of the speed multiplier
system.setSpeed.code=system.setSpeed(1);
system.setSpeed.hint=system.setSpeed(1);\n\
  \n\
Set the speed multiplier\n\
  \n\
The reciprocal of the delay multiplier
system.showImage.code=system.showImage();
system.showImage.hint=system.showImage();\n\
  \n\
Load an image to the image out view
system.sleep.code=system.sleep(0);
system.sleep.hint=system.sleep(0);\n\
  \n\
Pause script running on the specified amount of time in ms.\n\
\n\
system.sleep(ms);\n\
  ms - time in ms.
system.sleepNonMultiplied.code=system.sleepNonMultiplied(0);
system.sleepNonMultiplied.hint=system.sleepNonMultiplied(0);\n\
  \n\
Pause script running on the specified amount of time in ms.\n\
\n\
Not affected by speed multipliers
mouse.pressRight.code=mouse.pressRight();
mouse.pressRight.hint=mouse.pressRight();\n\
\n\
Press the right mouse button\n\
\n\
Method consists of:\n\
  pressRight();\n\
    sleep(pressDelay);
mouse.pressMiddle.code=mouse.pressMiddle();
mouse.pressMiddle.hint=mouse.pressMiddle();\n\
\n\
Press the middle mouse button\n\
\n\
Method consists of:\n\
  pressMiddle();\n\
    sleep(pressDelay);
mouse.releaseLeft.code=mouse.releaseLeft();
mouse.releaseLeft.hint=mouse.releaseLeft();\n\
\n\
Release the left mouse button\n\
\n\
Method consists of:\n\
  releaseLeft();\n\
    sleep(releaseDelay);
mouse.releaseRight.code=mouse.releaseRight();
mouse.releaseMiddle.code=mouse.releaseMiddle();
mouse.releaseRight.hint=mouse.releaseRight();\n\
\n\
Release the right mouse button\n\
\n\
Method consists of:\n\
  releaseRight();\n\
    sleep(releaseDelay);
mouse.releaseMiddle.hint=mouse.releaseMiddle();\n\
\n\
Release the middle mouse button\n\
\n\
Method consists of:\n\
  releaseMiddle();\n\
    sleep(releaseDelay);
mouse.animated.code=mouse.animated();
mouse.animated.hint=mouse.animated();\n\
\n\
Returns an animated version of mouse object
mouse.clickLeft.code=mouse.clickLeft();
mouse.clickLeft.hint=mouse.clickLeft();\n\
\n\
Click the left mouse button\n\
\n\
The method consists of two calls of pressing and releasing a button:\n\
  pressLeft();\n\
    sleep(pressDelay);\n\
  releaseLeft();\n\
    sleep(releaseDelay);
mouse.clickRight.code=mouse.clickRight();
mouse.clickRight.hint=mouse.clickRight();\n\
\n\
Click the right mouse button\n\
\n\
The method consists of two calls of pressing and releasing a button:\n\
  pressRight();\n\
    sleep(pressDelay);\n\
  releaseRight();\n\
    sleep(releaseDelay);
mouse.clickMiddle.code=mouse.clickMiddle();
mouse.clickMiddle.hint=mouse.clickMiddle();\n\
\n\
Click the middle mouse button\n\
\n\
The method consists of two calls of pressing and releasing a button:\n\
  pressMiddle();\n\
    sleep(pressDelay);\n\
  releaseMiddle();\n\
    sleep(releaseDelay);
mouse.wheelUp.code=mouse.wheelUp(3);
mouse.wheelUp.hint=mouse.wheelUp(3);\n\
\n\
Rotate the mouse wheel on the specifies number of lines\n\
\n\
Method consists of:\n\
  wheelUp(amount);\n\
    sleep(wheelDelay);
mouse.wheelDown.code=mouse.wheelDown(3);
mouse.wheelDown.hint=mouse.wheelDown(3);\n\
\n\
Rotate the mouse wheel on the specifies number of lines\n\
\n\
Method consists of:\n\
  wheelDown(amount);\n\
    sleep(wheelDelay);
mouse.pressLeftAt.code=mouse.pressLeftAt(0,0);
mouse.pressLeftAt.hint=mouse.pressLeftAt(0,0);\n\
\n\
Move the cursor to the particular point and press the button\n\
\n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  pressLeft();\n\
    sleep(pressDelay);
mouse.pressMiddleAt.code=mouse.pressMiddleAt(0,0);
mouse.pressMiddleAt.hint=mouse.pressMiddleAt(0,0);\n\
\n\
Move the cursor to the particular point and press the button\n\
\n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  pressMiddle();\n\
    sleep(pressDelay);
mouse.pressRightAt.code=mouse.pressRightAt(0,0);
mouse.pressRightAt.hint=mouse.pressRightAt(0,0);\n\
\n\
Move the cursor to the particular point and press the button\n\
\n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  pressRight();\n\
    sleep(pressDelay);
mouse.releaseLeftAt.code=mouse.releaseLeftAt(0,0);
mouse.releaseLeftAt.hint=mouse.releaseLeftAt(0,0);\n\
\n\
Move the cursor to the particular point and release the button\n\
\n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  releaseLeft();\n\
    sleep(pressDelay);
mouse.releaseMiddleAt.code=mouse.releaseMiddleAt(0,0);
mouse.releaseMiddleAt.hint=mouse.releaseMiddleAt(0,0);\n\
\n\
Move the cursor to the particular point and release the button\n\
\n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  releaseMiddle();\n\
    sleep(pressDelay);
mouse.releaseRightAt.code=mouse.releaseRightAt(0,0);
mouse.releaseRightAt.hint=mouse.releaseRightAt(0,0);\n\
\n\
Move the cursor to the particular point and release the button\n\
\n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  releaseRight();\n\
    sleep(pressDelay);
system.time.code=system.time();
system.time.hint=system.time();\n\
\n\
Get the current system time in microseconds 1/1000 sec
system.nanoTime.code=system.nanoTime();
system.nanoTime.hint=system.nanoTime();\n\
\n\
Get the current system time in nanoseconds 1/1000000 sec
mouse.clickLeftAt.code=mouse.clickLeftAt(0,0);
mouse.clickLeftAt.hint=mouse.clickLeftAt('LEFT',0,0);\n\
\n\
Click the button at the particular point \n\
\n\
The method consists of two calls of pressing and releasing a button:\n\
  pressLeftAt(x,y);\n\
    sleep(pressDelay);\n\
  releaseLeftAt(x,y);\n\
    sleep(releaseDelay);
mouse.clickRightAt.code=mouse.clickRightAt(0,0);
mouse.clickRightAt.hint=mouse.clickRightAt('LEFT',0,0);\n\
\n\
Click the button at the particular point \n\
\n\
The method consists of two calls of pressing and releasing a button:\n\
  pressRightAt(x,y);\n\
    sleep(pressDelay);\n\
  releaseRightAt(x,y);\n\
    sleep(releaseDelay);
mouse.clickMiddleAt.code=mouse.clickMiddleAt(0,0);
mouse.clickMiddleAt.hint=mouse.clickMiddleAt('LEFT',0,0);\n\
\n\
Click the button at the particular point \n\
\n\
The method consists of two calls of pressing and releasing a button:\n\
  pressMiddleAt(x,y);\n\
    sleep(pressDelay);\n\
  releaseMiddleAt(x,y);\n\
    sleep(releaseDelay);
mouse.wheelUpAt.code=mouse.wheelUpAt(3,0,0);
mouse.wheelUpAt.hint=mouse.wheelUpAt(3,0,0);\n\
\n\
Rotate the mouse wheel on the specifies number of lines at the particular point\n\
\n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  wheelUp(amount);\n\
    sleep(wheelDelay);
mouse.wheelDownAt.code=mouse.wheelDownAt(3,0,0);
mouse.wheelDownAt.hint=mouse.wheelDownAt(3,0,0);\n\
\n\
Rotate the mouse wheel on the specifies number of lines at the particular point\n\
\n\
Method consists of:\n\
  moveTo(x,y);\n\
    sleep(moveDelay);\n\
  wheelDown(amount);\n\
    sleep(wheelDelay);
mouse.moveAndPressLeft.code=mouse.moveAndPressLeft(0,0);
mouse.moveAndPressLeft.hint=mouse.moveAndPressLeft(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and press the button\n\
\n\
mouse.moveAndPressLeft(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  pressLeft();\n\
    sleep(pressDelay);
mouse.moveAndPressMiddle.code=mouse.moveAndPressMiddle(0,0);
mouse.moveAndPressMiddle.hint=mouse.moveAndPressMiddle(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and press the button\n\
\n\
mouse.moveAndPressMiddle(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  pressMiddle();\n\
    sleep(pressDelay);
mouse.moveAndPressRight.code=mouse.moveAndPressRight(0,0);
mouse.moveAndPressRight.hint=mouse.moveAndPressRight(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and press the button\n\
\n\
mouse.moveAndPressRight(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  pressRight();\n\
    sleep(pressDelay);
mouse.moveAndReleaseLeft.code=mouse.moveAndReleaseLeft(0,0);
mouse.moveAndReleaseLeft.hint=mouse.moveAndReleaseLeft(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and release the button\n\
\n\
mouse.moveAndReleaseLeft(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  releaseLeft();\n\
    sleep(releaseDelay);
mouse.moveAndReleaseRight.code=mouse.moveAndReleaseRight(0,0);
mouse.moveAndReleaseRight.hint=mouse.moveAndReleaseRight(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and release the button\n\
\n\
mouse.moveAndReleaseRight(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  releaseRight();\n\
    sleep(releaseDelay);
mouse.moveAndReleaseMiddle.code=mouse.moveAndReleaseMiddle(0,0);
mouse.moveAndReleaseMiddle.hint=mouse.moveAndReleaseMiddle(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and release the button\n\
\n\
mouse.moveAndReleaseMiddle(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  releaseMiddle();\n\
    sleep(releaseDelay);
mouse.moveAndClickLeft.code=mouse.moveAndClickLeft(0,0);
mouse.moveAndClickLeft.hint=mouse.moveAndClickLeft(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and click the button\n\
\n\
mouse.moveAndClickLeft(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  pressLeft();\n\
    sleep(pressDelay);\n\
  releaseLeft('BTN');\n\
    sleep(releaseDelay);
mouse.moveAndClickMiddle.code=mouse.moveAndClickMiddle(0,0);
mouse.moveAndClickMiddle.hint=mouse.moveAndClickMiddle(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and click the button\n\
\n\
mouse.moveAndClickMiddle(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  pressMiddle();\n\
    sleep(pressDelay);\n\
  releaseMiddle('BTN');\n\
    sleep(releaseDelay);
mouse.moveAndClickRight.code=mouse.moveAndClickRight(0,0);
mouse.moveAndClickRight.hint=mouse.moveAndClickRight(0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and click the button\n\
\n\
mouse.moveAndClickRight(dx,dy);\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  pressRight();\n\
    sleep(pressDelay);\n\
  releaseRight('BTN');\n\
    sleep(releaseDelay);
mouse.moveAndWheelUp.code=mouse.moveAndWheelUp(3,0,0);
mouse.moveAndWheelUp.hint=mouse.moveAndWheelUp(3,0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and rotate the wheel\n\
\n\
mouse.moveAndWheelUp\n\
  (amount, dx, dy);\n\
  amount - an amount of lines\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  wheelUp(amount);\n\
    sleep(wheelDelay);
mouse.moveAndWheelDown.code=mouse.moveAndWheelDown(3,0,0);
mouse.moveAndWheelDown.hint=mouse.moveAndWheelDown(3,0,0);\n\
\n\
Move the cursor relative to the coordinates of the last event and rotate the wheel\n\
\n\
mouse.moveAndWheelDown\n\
  (amount, dx, dy);\n\
  amount - an amount of lines\n\
  dx, dy - offsets\n\
\n\
Method consists of:\n\
  move(dx,dy);\n\
    sleep(moveDelay);\n\
  wheelDown(amount);\n\
    sleep(wheelDelay);